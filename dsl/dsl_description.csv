function_name;DSL;output;inputs;requires_grid;requires_color;grid_level;grid_size_change;color_change;description;additional_comments;object_level
add_border_around_object;1;object;object;1;1;0;0;1;surrounding adjacent pixels of an object are added;;
add_corners_around_object;1;object;object;1;1;0;0;1;surrounding diagonal pixels  of an object are added;;
add_star_around_object;1;object;object;1;1;0;0;1;surrounding adjacent and diagonal pixels of an object are added;;
change_color_pixel_out;1;object;object;0;1;0;0;1;"Changes every ""edge"" pixel of an object. Note that a grid next to the edge of an object is not an edge";;
change_color_pixel_in;1;object;object;0;1;0;0;1;Changes every pixel inside of an object;;
color_max;0;color;object;0;0;1;0;0;Determines the max. used color of an object;support function;
color_min;0;color;object;0;0;1;0;0;Determines the min. used color of an object;support function;
color_object_max;1;object;object;0;0;1;0;1;Colors an object by the most used color;;
color_object_min;1;object;object;0;0;1;0;1;Colors an object by the least used color (note: color has to be used at least once);;
color_order;0;list[color];object;0;0;1;0;0;Provides a ranking of most used colors;;
fill_pixel;1;object;object;1;1;0;0;1;Changes the color of every 1-pixel hole;;
fill_pixel_down;1;object;object;1;1;0;0;1;Changes the color of every y-axis hole;;
fill_pixel_right;1;object;object;1;1;0;0;1;Changes the color of every x-axis hole;;
flip_xax;1;object;object;1;0;1;0;0;Flip of the x-values;;
flip_yax;1;object;object;1;0;1;0;0;Flip of the y-values;;
grid_add_down;1;grid;grid;1;1;1;1;1;A uniform colored line is added left ;;
grid_add_left;1;grid;grid;1;1;1;1;1;A uniform colored line is added down ;;
grid_add_left_and_right;1;grid;grid;1;1;1;1;1;A uniform colored line is added left and right;;
grid_add_right;1;grid;grid;1;1;1;1;1;A uniform colored line is added right;;
grid_add_up;1;grid;grid;1;1;1;1;1;A uniform colored line is added top;;
grid_add_up_and_down;1;grid;grid;1;1;1;1;1;A uniform colored line is added down and top;;
grid_duplicate_down;1;grid;grid;1;0;1;1;1;down line is duplicated;;
grid_duplicate_left;1;grid;grid;1;0;1;1;1;left line is duplicated;;
grid_duplicate_left_and_right;1;grid;grid;1;0;1;1;1;left and right line is duplicated;;
grid_duplicate_right;1;grid;grid;1;0;1;1;1;right line is duplicated;;
grid_duplicate_up;1;grid;grid;1;0;1;1;1;up line is duplicated;;
grid_duplicate_up_and_down;1;grid;grid;1;0;1;1;1;up and down line is duplicated;;
holes;0;object;object;1;0;0;0;0;Determines the 1-pixel holes of an object;support function;
isolate;1;grid;object;0;0;1;1;0;Isolates an object as an grid;;
move_down;1;object;object;1;0;0;0;0;An object is moved down  w.r.t. the grid;;
move_down_edge;1;object;object;1;0;0;0;0;An object is moved to the bottom edge;;
move_left;1;object;object;0;0;0;0;0;An object is moved to the left w.r.t. the grid;;
move_left_edge;1;object;object;0;0;0;0;0;An object is moved to the left edge;;
move_right;1;object;object;1;0;0;0;0;An object is moved to the right w.r.t. the grid;;
move_right_edge;1;object;object;1;0;0;0;0;An object is moved to the right edge;;
move_up;1;object;object;0;0;0;0;0;An object is moved up  w.r.t. the grid;;
move_up_edge;1;object;object;0;0;0;0;0;An object is moved to the top edge;;
neighborhood;0;object;object;1;0;0;0;0;Function determines the adjacent pixels;support function for pixel_out functions;
neighborhood_with_diagonals;0;object;object;1;0;0;0;0;Function determines the adjacent + diagonal pixels;support function for pixel_out functions;
only_diagonal_neighborhood;0;object;object;1;0;0;0;0;Function determines  diagonal pixels;support function for pixel_out functions;
pixel_in;0;object;object;1;0;0;0;0;"Determines the ""inside"" pixel of an object; i.e. pixel surrounded by other pixels of the object";support function;
pixel_out;0;object;object;1;0;0;0;0;"Determines the ""outside"" pixel of an object; i.e. pixel with at least one adjacent pixel which is not an element of the object";support function;
pixel_out_with_uncovered_neighbors;0;object, object;object;1;0;0;0;0;Determines the pixels surrounding (adjecent) an object which are not covered by the object itself;support function;
pixel_out_with_uncovered_neighbors_only_diagonal_neighborhood;0;object, object;object;1;0;0;0;0;Determines the pixels surrounding (diagonal + adjacent) an object which are not covered by the object itself;support function;
pixel_out_with_uncovered_neighbors_with_diagonal;0;object, object;object;1;0;0;0;0;Determines the pixels surrounding (diagonal) an object which are not covered by the object itself;support function;
project_bigger;1;grid;object;1;0;1;1;0;Projects an object (grid) on a bigger grid;"gridsize is here used as ""to-be gridsize""";
project_smaller;1;grid;object;1;0;1;1;0;Projects an object (grid) on a smaller grid;"gridsize is here used as ""to-be gridsize""";
x_max;0;coordinate;object;0;0;1;0;0;Determines the co-ordinate what the max x-value of an object;support function;
x_min;0;coordinate;object;0;0;1;0;0;Determines the co-ordinate what the min x-value of an object;support function;
y_max;0;coordinate;object;0;0;1;0;0;Determines the co-ordinate what the max y-value of an object;support function;
y_min;0;coordinate;object;0;0;1;0;0;Determines the co-ordinate what the min y-value of an object;support function;
function_name_here;;;;;;;;;;;